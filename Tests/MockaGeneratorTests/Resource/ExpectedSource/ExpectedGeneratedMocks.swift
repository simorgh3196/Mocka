// MARK: - Mocks generated by Mocka
// Don't edit this file

import Mocka
@testable import Mocka

func test() {
//    let mock = MockSimpleProtocol()
//
//    stub(mock) { stub in
//        when(stub.readWriteProperty.get)
//                .thenReturn(10)
//                .thenReturn(10)
//                .thenReturn { 10 * 20 }
//    }

}

//class MockSimpleProtocol: SimpleProtocol, Mock {
//
//    var stubMethodHolder = StubMethodHolder<Self>()
//    var invocationRecorder = InvocationRecorder()
//
//    static let identifier = "SimpleProtocol"
//
//    var readWriteProperty: Int = 0
//    var optionalProperty: Int? = 0
//    func noReturn() {}
//    func withParam(_ param: String, param2: String) -> Int {
//        // status
//        fatalError()
//    }
//
//    class _MethodSignature: MethodSignature<MockSimpleProtocol> {
//
//        class func noReturn () -> MethodSignature {
//            return .init()
//        }
//
//        class func withParam <M1: ParameterMatchable, M2: ParameterMatchable> (_ param: M1, param2: M2) -> MethodSignature
//            where M1.MatchedType == String, M2.MatchedType == String
//        {
//            return .init()
//        }
//    }
//}
